name: Update Profile Manifest

on:
  repository_dispatch:
    types: [update-profile]

jobs:
  update:
    runs-on: ubuntu-latest

    env:
      APP_NAME: profile
      REPO_LOCATION: https://github.com/OmyDaGreat/Profile
      DESCRIPTION: A terminal-based git profile switcher made with Kotlin

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      - name: Get latest commit message from Profile repo
        id: get_commit_message
        run: |
          REPO_OWNER=$(echo ${{ env.REPO_LOCATION }} | awk -F '/' '{print $4}')
          REPO_NAME=$(echo ${{ env.REPO_LOCATION }} | awk -F '/' '{print $5}')
          latest_commit_message=$(curl -s https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/commits/main | jq -r '.commit.message')
          echo "COMMIT_MESSAGE=$latest_commit_message" >> $GITHUB_ENV
      - name: Update manifest
        run: |
          mkdir -p bucket
          cat > bucket/${{ env.APP_NAME }}.json << EOF
          {
              "version": "${{ github.event.client_payload.version }}",
              "description": "${{ env.DESCRIPTION }}",
              "homepage": "${{ env.REPO_LOCATION }}",
              "license": "MIT",
              "architecture": {
                  "64bit": {
                      "url": "${{ env.REPO_LOCATION }}/releases/download/${{ github.event.client_payload.tag }}/${{ env.APP_NAME }}-${{ github.event.client_payload.version }}.zip",
                      "hash": "${{ github.event.client_payload.sha256 }}"
                  }
              },
              "bin": "${{ env.APP_NAME }}.bat",
              "checkver": "github",
              "autoupdate": {
                  "architecture": {
                      "64bit": {
                          "url": "${{ env.REPO_LOCATION }}/releases/download/v\$version/${{ env.APP_NAME }}-\$version.zip"
                      }
                  }
              }
          }
          EOF
      - name: Commit and push
        run: |
          git add bucket/${{ env.APP_NAME }}.json
          git commit -m "${{ env.APP_NAME }}: ${{ github.event.client_payload.latest_commit_message }}"
          git push
